1. How should you define machine learning?

- Machine learning is the field of study that gives computers the ability to learn without being explicity programmed.
- A computer program is said to learn from experience E with respect to some task T and some performance measure P, if it's performance on T, as measured by P, improves with experiance E.


2. Can you name four types of problems where it shines?

- Analyzing images to automaticly classify them (image classification)
- Making your app react to voice commands (speech recognition)
- Detecting potential fraud (anomaly detection)
- Recommending products based on past purchases (recommender system)
- Segmenting clients (clustering)


3. What is a labeled training set?

- "The value you want to predict is actually in the training data." It means that each record from training data contains all the necessary information (features and target value as well).
- The training set you feed to the algorithm includes the desired solutions, called labels


4. What are the two most common supervised tasks?

- Classification
- Regression


5. Can you name four common unsupervised tasks?

- Clustering
- Anomaly detection
- Visualization and dimensionality reduction
- Association rule learning


6. What type of Machine Learning algorithm would you use to allow a robot to walk in various unknown terrains?

- Reinforcment learning


7. What type of algorithm would you use to segment your customers into multiple groups?

- Clustering


8. Would you frame the problem of spam detection as a supervised learning problem or an unsupervised learning problem?

- Supervised


9. What is an online learning system?

- It's a system that incrementally is trained by feeding it data instances sequentially, either individually or in small groups called mini-batches.


10. What is out-of-core learning?

- When you have a huge dataset that can not fit in one machines memory. The algorithm loads part of the data, runs a training step on that data and repeats the process until it has run on all of the data.


11. What type of learning algorithm relies on a similarity measure to make predictions?

- Instance-based learning


12. What is the difference between a model parameter and a learning algorithms hyperparameter?

- A hyperparameter is a parameter of a learning algorithm (not of the model). As such, it's not affected by the learning algorithm itself. It must be set prior to training and remain constant during training.


13. What do the model-based learning algorithms search for? What is the most common strategy they use to succeed? How do they make predictions?

- It looks for the optimal value for the model parameters such that the model will generalize well to new instances.
- We train such systems by minimizing a cost function that measures how bad the system is at making predictions on the training data.
- To make predictions we feed the new instances features into the models prediction function, using the parameter values found by the learning algorithm.


14. Can you name four of the main challenges in ML?

- Insufficient quantity of training data
- Nonrepresentative training data
- Poor-quality data
- Irrelevant features
- Over-/underfitting the training data


15. If your model performs great on the training data, but generalizes poorly to new instances, what is happening? Can you name three possible solutions?

- Overfitting on the training data.
- Getting more data, simplify the model or reducing the noise in the training data.


16. What is a test set and why would you want to use it?

- It's a data set that isn't included in the training and is used to validate the performance of the model.


17. What is the purpose of a validation set?

- It's used to compare the performance of different models.


18. What is the train-dev set, when do you need it and how would you use it?

- The train-dev set is used when there is a risk of mismatch between the training, validation and test sets.
- It's part of the train set that is held out and is used together with the validation set to validate if there is a data missmatch. If the model performs well on the train-dev set, but not on the validation set then there is probably a problem with data missmatch.


19. What can go wrong if you tune hyperparameters using the test set?

- You risk overfitting the model and the generalization error will be too optimistic. So you risk launching a model that performs worse than expected.
